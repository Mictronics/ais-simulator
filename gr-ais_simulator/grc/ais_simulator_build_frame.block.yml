id: ais_simulator_build_frame
label: Build AIS Frame
category: '[AIS Simulator]'

templates:
  imports: import ais_simulator
  make: ais_simulator.build_frame(${sentence}, ${enable_nrzi}, ${enable_input}, ${len_tag_key})
  callbacks:
    - set_sentence(${sentence})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
  - id: sentence
    label: Sentence
    dtype: string
    default: '010010000011101011110111001110011000100000000000000000100000001011001000001011000101000110100010010100001101011001111011000011111111111011100101110011100000000000000110'
  - id: enable_nrzi
    label: Enable NRZI
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
  - id: enable_input
    label: Enable Input
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
  - id: len_tag_key
    label: Length Tag Name
    dtype: string
    default: packet_len

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
  - label: in
    domain: stream
    dtype: byte
    vlen: 1
    optional: 1

outputs:
  - label: out
    domain: stream
    dtype: byte
    vlen: 1
    optional: 0

documentation: |-
  This block builds a valid AIS frame from a bit string sentence.

  The sentence can be change on runtime via tagged stream from a PDU message
  or via RPC on set_sentence(const char *sentence).

  Enable NRZI will switch NRZI encoding on or off.

  Enable Input will switch the tagged stream input on or off. The default sentence
  will be send repeatedly in case enable input is switched off.

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
